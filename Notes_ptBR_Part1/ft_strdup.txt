#include "libft.h"

char	*ft_strdup(const char *s) // Ele retorna um ponteiro para a memória recém-alocada na qual copiou a sequência de caracteres. Mas agora somos responsáveis por essa memória e, eventualmente, devemos usar free.
{
	size_t	index; // size_t pois iremos comparar com um retorno de ft_strlen, essa retorna um size_t
	char	*string;

	index = 0;
	string = malloc(ft_strlen(s) + 1); // A string recebe uma alocação de memoria do tamanho da string s + 1. Pois iremos adicionar o byte nulo ('\0') no final
	if (s == NULL) // Se a string s for nula
		return (NULL); // Retornamos null
	while (index < (ft_strlen(s) + 1)) // Enquanto o index for menor que o tamanho da string s + 1
	{
		string[index] = s[index]; // A string no index recebe o valor de s no index
		index++; // incrementamos index
	}
	string[index] = '\0'; // A string no index, no seu ultimo index, recebe agora o caractere nulo
	return (string); // No fim retornamos a string criada
}
// OBS, essa função copia uma string para um novo local de memoria, o retorno é um ponteiro para o inicio da memoria alocada para essa string. Essa memoria sera utilizada até que se use um free para esse ponteiro ou quando o programa seja finalizado.
